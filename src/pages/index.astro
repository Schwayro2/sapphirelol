---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style is:global>
      :root {
        --primary: #6366f1;
        --primary-dark: #4f46e5;
        --text: #1f2937;
        --text-light: #6b7280;
        --bg: #ffffff;
        --card: #f9fafb;
        --border: #e5e7eb;
        --radius: 10px;
        --shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
        --plasma-gradient: linear-gradient(90deg, #ff41ca, #5f007f, #2335be, #c321a5, #2af5ff);
      }

      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }

      body {
        font-family: 'Inter', sans-serif;
        color: var(--text);
        background: var(--bg);
        line-height: 1.5;
        scroll-behavior: smooth;
      }

      main {
        max-width: 1000px;
        margin: auto;
        padding: 1.5rem;
      }

      .hero {
        text-align: center;
        padding: 5rem 1rem 3rem;
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.8s ease-out;
      }

      .hero.visible {
        opacity: 1;
        transform: translateY(0);
      }

      .hero h1 {
        font-size: 2.5rem;
        font-weight: 700;
        background: var(--plasma-gradient);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        margin-bottom: 0.75rem;
      }

      .hero p {
        color: var(--text-light);
        margin-bottom: 1.5rem;
        font-size: 1.125rem;
      }

      .btn {
        padding: 0.65rem 1.25rem;
        border-radius: var(--radius);
        font-weight: 600;
        text-decoration: none;
        transition: 0.3s ease;
      }

      .btn-primary {
        background: var(--primary);
        color: white;
      }

      .btn-primary:hover {
        background: var(--primary-dark);
      }

      .section-title {
        text-align: center;
        font-size: 1.75rem;
        margin: 3rem 0 1.5rem;
      }

      .grid {
        display: grid;
        gap: 1.5rem;
      }

      @media (min-width: 768px) {
        .products-grid, .testimonials-grid {
          grid-template-columns: repeat(3, 1fr);
        }

        .features-grid {
          grid-template-columns: repeat(2, 1fr);
        }
      }

      .card {
        background: var(--card);
        border: 1px solid var(--border);
        padding: 1.25rem;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        opacity: 0;
        transform: translateY(30px);
        transition: all 0.5s ease-out;
      }

      .card.visible {
        opacity: 1;
        transform: translateY(0);
      }

      @keyframes fadeOut {
        from { opacity: 1; transform: translateY(0); }
        to { opacity: 0; transform: translateY(20px); }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section class="hero animate-on-scroll">
        <h1>Next-Level Game Enhancements</h1>
        <p>Premium tools for competitive players who demand performance and discretion.</p>
        <div style="display: flex; gap: 0.75rem; flex-wrap: wrap; justify-content: center;">
          <a href="#products" class="btn btn-primary">Explore Products</a>
          <a href="#features" class="btn" style="border: 1px solid var(--border); color: var(--primary);">How It Works</a>
        </div>
      </section>

      <section id="products" class="animate-on-scroll">
        <h2 class="section-title">Premium Solutions</h2>
        <div class="grid products-grid">
          <div class="card">
            <h3 style="color: var(--primary);">Fortnite Suite</h3>
            <p style="color: var(--text-light); font-size: 0.95rem;">ESP, aim assist, and radar tools</p>
            <ul style="margin-top: 0.75rem; padding-left: 1.25rem; font-size: 0.95rem;">
              <li>Player ESP</li>
              <li>Smart aim</li>
              <li>Loot radar</li>
              <li>UI customization</li>
            </ul>
          </div>
        </div>
      </section>

      <section id="features" class="animate-on-scroll">
        <h2 class="section-title">Why Choose Us</h2>
        <div class="grid features-grid">
          <div class="card">
            <h3>üõ°Ô∏è Undetected</h3>
            <p>Secure and consistently updated tools.</p>
          </div>
          <div class="card">
            <h3>‚ö° Performance</h3>
            <p>Lightweight, optimized, and lag-free.</p>
          </div>
          <div class="card">
            <h3>üîÅ Always Fresh</h3>
            <p>Daily maintenance ensures compatibility.</p>
          </div>
        </div>
      </section>

      <section class="testimonials animate-on-scroll">
        <h2 class="section-title">User Feedback</h2>
        <div class="grid testimonials-grid">
          <div class="card"> <p>"6 months no ban, everything works smooth."</p> <strong>- ProPlayer123</strong> </div>
          <div class="card"> <p>"Made Immortal with aim assist and radar."</p> <strong>- CompetitiveGamer</strong> </div>
          <div class="card"> <p>"Support was fast and setup was easy."</p> <strong>- StreamerXYZ</strong> </div>
        </div>
      </section>
    </main>
    <Footer />

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const animatedEls = document.querySelectorAll('.animate-on-scroll, .card');
        const observer = new IntersectionObserver(entries => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('visible');
            } else {
              entry.target.classList.remove('visible');
            }
          });
        }, { threshold: 0.1 });

        animatedEls.forEach(el => observer.observe(el));
      });
    </script>
  </body>
</html>
