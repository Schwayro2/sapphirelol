---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style is:global>
      :root {
        --primary: #6366f1;
        --primary-dark: #4f46e5;
        --accent: #f43f5e;
        --text: #1f2937;
        --text-light: #6b7280;
        --bg: #ffffff;
        --card: #f9fafb;
        --border: #e5e7eb;
        --radius: 12px;
        --shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
      }

      *, *::before, *::after {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }

      body {
        font-family: 'Inter', sans-serif;
        color: var(--text);
        background-color: var(--bg);
        line-height: 1.5;
        scroll-behavior: smooth;
      }

      main {
        max-width: 1200px;
        margin: auto;
        padding: 2rem;
      }

      .hero {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        padding: 6rem 1rem;
        position: relative;
        background: radial-gradient(circle at center, rgba(99,102,241,0.05), transparent);
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.8s ease-out;
      }

      .hero.visible {
        opacity: 1;
        transform: translateY(0);
      }

      .hero h1 {
        font-size: 3rem;
        font-weight: 800;
        background: linear-gradient(90deg, var(--primary), var(--accent));
        -webkit-background-clip: text;
        color: transparent;
        margin-bottom: 1rem;
        animation: fadeInUp 1.2s ease-out;
      }

      .hero p {
        max-width: 600px;
        color: var(--text-light);
        margin-bottom: 2rem;
        animation: fadeIn 1.5s ease-out;
      }

      .btn {
        padding: 0.75rem 1.5rem;
        border-radius: var(--radius);
        text-decoration: none;
        font-weight: 600;
        transition: background 0.3s ease, transform 0.2s ease;
      }

      .btn-primary {
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        color: #fff;
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        background: linear-gradient(135deg, var(--primary-dark), var(--primary));
      }

      .section-title {
        text-align: center;
        font-size: 2rem;
        margin: 4rem 0 2rem;
      }

      .grid {
        display: grid;
        gap: 2rem;
      }

      @media (min-width: 768px) {
        .products-grid, .features-grid, .testimonials-grid {
          grid-template-columns: repeat(3, 1fr);
        }
      }

      .card {
        background: var(--card);
        border: 1px solid var(--border);
        padding: 1.5rem;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        transition: transform 0.3s ease, opacity 0.3s ease;
        opacity: 0;
        transform: translateY(40px);
      }

      .card.visible {
        opacity: 1;
        transform: translateY(0);
      }

      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }

      @keyframes fadeInUp {
        0% { opacity: 0; transform: translateY(30px); }
        100% { opacity: 1; transform: translateY(0); }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section class="hero animate-on-scroll">
        <h1>Next-Level Game Enhancements</h1>
        <p>Premium tools for competitive players who demand performance and discretion.</p>
        <div style="display: flex; gap: 1rem; flex-wrap: wrap; justify-content: center;">
          <a href="#products" class="btn btn-primary">Explore Products</a>
          <a href="#features" class="btn" style="border: 1px solid var(--border); color: var(--primary);">How It Works</a>
        </div>
      </section>

      <section id="products" class="animate-on-scroll">
        <h2 class="section-title">Our Premium Solutions</h2>
        <div class="grid products-grid">
          <div class="card"> <h3 style="color: var(--primary);">Fortnite Suite</h3> <p style="color: var(--text-light);">Complete ESP, aim assistance, and loot radar</p> <ul> <li>Player ESP</li> <li>Aim assist</li> <li>Loot radar</li> <li>Custom UI</li> </ul> </div>
        </div>
      </section>

      <section id="features" class="animate-on-scroll">
        <h2 class="section-title">Key Features</h2>
        <div class="grid features-grid">
          <div class="card"> <h3>üõ°Ô∏è Undetected</h3> <p>Stay safe with encryption and frequent updates.</p> </div>
          <div class="card"> <h3>‚ö° High Performance</h3> <p>Optimized to run smooth without lag.</p> </div>
          <div class="card"> <h3>üîÑ Daily Updates</h3> <p>Always compatible with the latest patches.</p> </div>
        </div>
      </section>

      <section class="testimonials animate-on-scroll">
        <h2 class="section-title">What Our Users Say</h2>
        <div class="grid testimonials-grid">
          <div class="card"> <p>"6 months, no bans, natural feeling ESP and aim. Unreal."</p> <strong>- ProPlayer123</strong> </div>
          <div class="card"> <p>"Went from Diamond to Immortal. Worth every penny."</p> <strong>- CompetitiveGamer</strong> </div>
          <div class="card"> <p>"Fast support, flawless setup. 10/10 experience."</p> <strong>- StreamerXYZ</strong> </div>
        </div>
      </section>
    </main>
    <Footer />

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const elements = document.querySelectorAll('.animate-on-scroll, .card');
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('visible');
              observer.unobserve(entry.target);
            }
          });
        }, { threshold: 0.1 });

        elements.forEach(el => observer.observe(el));
      });
    </script>
  </body>
</html>
