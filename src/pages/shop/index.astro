---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE } from '../../consts';
import { getCollection } from 'astro:content';

let products = [];
try {
  const shopCollection = await getCollection('shop');
  if (shopCollection?.length) {
    products = shopCollection.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  }
} catch (error) {
  console.error('Error loading products:', error);
}
---

<html lang="en">
  <head>
    <BaseHead title={`${SITE_TITLE} Shop`} description="Premium gaming enhancements and tools" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet">
    <style is:global>
      :root {
        --primary: #6366f1;
        --accent: #818cf8;
        --bg: #0f172a;
        --text: #f8fafc;
        --card-bg: rgba(255, 255, 255, 0.05);
        --border: rgba(255, 255, 255, 0.1);
        --radius: 16px;
        --shadow: 0 10px 25px rgba(0, 0, 0, 0.25);
        --transition: all 0.3s ease;
      }

      html, body {
        font-family: 'Inter', sans-serif;
        background: var(--bg);
        color: var(--text);
        margin: 0;
        scroll-behavior: smooth;
      }

      main {
        max-width: 1200px;
        margin: auto;
        padding: 2rem 1rem;
      }

      .hero {
        min-height: 70vh;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        background: linear-gradient(to right, #1e3a8a, #6366f1);
        color: white;
        padding: 2rem;
        position: relative;
        overflow: hidden;
      }

      .hero::after {
        content: '';
        position: absolute;
        top: -100px;
        left: -100px;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle at center, rgba(255,255,255,0.05), transparent 70%);
        transform: rotate(45deg);
        animation: pulseBg 6s infinite linear;
      }

      @keyframes pulseBg {
        0% { transform: scale(1) rotate(45deg); }
        50% { transform: scale(1.05) rotate(45deg); }
        100% { transform: scale(1) rotate(45deg); }
      }

      .hero h1 {
        font-size: 3rem;
        margin-bottom: 1rem;
      }

      .hero p {
        font-size: 1.25rem;
        opacity: 0.85;
      }

      .btn {
        display: inline-block;
        margin-top: 1.5rem;
        background: var(--primary);
        color: white;
        padding: 0.75rem 2rem;
        border-radius: var(--radius);
        font-weight: 600;
        text-decoration: none;
        transition: var(--transition);
      }

      .btn:hover {
        background: var(--accent);
        transform: scale(1.05);
      }

      .section-title {
        text-align: center;
        font-size: 2.25rem;
        margin: 3rem 0 1.5rem;
      }

      .products-grid {
        display: grid;
        gap: 2rem;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        padding-bottom: 3rem;
      }

      .product-card {
        background: var(--card-bg);
        border: 1px solid var(--border);
        border-radius: var(--radius);
        padding: 1.5rem;
        box-shadow: var(--shadow);
        backdrop-filter: blur(8px);
        opacity: 0;
        transform: translateY(20px);
        transition: var(--transition);
      }

      .product-card.visible {
        opacity: 1;
        transform: translateY(0);
      }

      .product-image {
        width: 100%;
        border-radius: var(--radius);
        object-fit: cover;
        height: 180px;
        margin-bottom: 1rem;
      }

      .product-title {
        font-size: 1.4rem;
        color: var(--primary);
        margin-bottom: 0.5rem;
        font-weight: 700;
      }

      .product-price {
        font-size: 1.2rem;
        font-weight: bold;
        color: var(--accent);
        margin-bottom: 0.75rem;
      }

      .product-description {
        font-size: 1rem;
        opacity: 0.8;
      }

      .empty-state {
        text-align: center;
        background: var(--card-bg);
        border: 2px dashed var(--border);
        padding: 2rem;
        border-radius: var(--radius);
        margin: 4rem 0;
      }

      @media (max-width: 768px) {
        .hero h1 {
          font-size: 2rem;
        }
      }
    </style>
  </head>
  <body>
    <Header />

    <main>
      <section class="hero">
        <div>
          <h1>Unleash Your Gaming Potential</h1>
          <p>Premium tools crafted for serious players. Get the edge now.</p>
          <a href="#products" class="btn">Browse Shop</a>
        </div>
      </section>

      <section id="products">
        <h2 class="section-title">Available Products</h2>

        {products.length > 0 ? (
          <ul class="products-grid">
            {products.map((product, index) => (
              <li class="product-card" style={`animation-delay:${index * 0.1}s`}>
                <a href={`/shop/${product.id}/`}>
                  <img src={product.data.heroImage} alt={product.data.title} class="product-image" />
                  <div>
                    <div class="product-title"><i class={product.data.icon || 'fa-solid fa-box'}></i> {product.data.title}</div>
                    <div class="product-price">${product.data.price}</div>
                    <p class="product-description">{product.data.description}</p>
                    <a href={`/shop/${product.id}/`} class="btn" style="margin-top: 1rem;">View Details</a>
                  </div>
                </a>
              </li>
            ))}
          </ul>
        ) : (
          <div class="empty-state">
            <h3>No Products Yet</h3>
            <p>Check back soon â€” something amazing is coming.</p>
          </div>
        )}
      </section>
    </main>

    <Footer />

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const observer = new IntersectionObserver(entries => {
          entries.forEach(entry => {
            if (entry.isIntersecting) entry.target.classList.add('visible');
          });
        }, { threshold: 0.1 });

        document.querySelectorAll('.product-card').forEach(el => observer.observe(el));
      });
    </script>
  </body>
</html>
